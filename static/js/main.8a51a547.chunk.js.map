{"version":3,"sources":["u1-assets/img/pizza-logo.svg","u3-components/Button/Button.tsx","u3-components/CartItem/selectors.ts","u3-components/Header/Header.tsx","u1-assets/img/empty-cart.png","u5-pages/EmptyCart.tsx","utils/redux-utils.ts","u3-components/CartItem/cart-reducer.ts","u3-components/CartItem/CartItem.tsx","u3-components/CartItem/index.tsx","u5-pages/Cart.tsx","u3-components/Categories/Categories.tsx","u3-components/SortPopup/selectors.ts","u3-components/SortPopup/filters-reducer.ts","u3-components/PopupMenu/PopupMenu.tsx","u3-components/SortPopup/SortPopup.tsx","u3-components/SortPopup/index.tsx","u3-components/PizzaBlock/selectors.ts","u3-components/PizzaBlock/pizzas-reducer.ts","u3-components/PizzaBlock/PizzaBlock.tsx","u3-components/PizzaBlock/index.tsx","u5-pages/Home.tsx","App.tsx","reportWebVitals.ts","u6-store/store.tsx","index.tsx"],"names":["Button","className","outline","children","restProps","classNames","cartItemsSelectors","state","cart","items","totalPriceSelectors","totalPrice","itemsCountSelectors","itemsCount","Header","cartTotalPrice","useSelector","cartItemsCount","to","width","src","logoSvg","alt","height","viewBox","fill","xmlns","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","EmptyCart","cartEmptyImage","useActions","actions","dispatch","useDispatch","useMemo","bindActionCreators","addToCartTC","createAsyncThunk","pizzaItem","thunkAPI","pizzas","getState","pizzaObj","find","obj","id","asyncActions","slice","createSlice","name","initialState","reducers","plusItem","action","payload","push","result","reduce","map","prev","cur","concat","total","price","length","minusItem","shift","removeItemsById","clearItems","extraReducers","builder","addCase","fulfilled","cartReducer","reducer","CartItem","type","size","count","onRemoveItem","onMinus","onPlus","onClick","cartActions","cartAsyncActions","cartSlice","Cart","cartItems","cartSelectors","plusCartItem","React","useCallback","minusCartItem","window","confirm","onClearCartItem","item","path","HOME","console","log","Categories","activeCategory","mappedCategories","index","bind","filtersSelectors","filters","category","sortBy","setSortBy","setCategory","catIndex","filtersReducer","PopupMenu","activeItem","visiblePopup","setVisiblePopup","sortRef","clickOutsideCallback","e","includes","current","handleOutsideClick","document","querySelector","addEventListener","removeEventListener","mappedSortType","active","value","label","ref","SortPopup","onSelect","selected","filtersActions","filtersSlice","pizzasItemsSelectors","pizzaIsLoadingSelectors","isLoading","fetchPizzasTC","a","axios","get","data","isError","rejectWithValue","error","isLoaded","acton","pizzasReducer","PizzaBlock","imageUrl","types","sizes","onAdd","availableSizes","addedCount","activeType","setActiveType","activeSize","setActiveSize","mappedAvailableTypes","curType","onSelectType","disabled","mappedAvailableSizes","curSize","onSelectSize","pizzasActions","pizzasAsyncActions","pizzasSlice","Home","props","pizzasItems","pizzaSelectors","pizzaIsLoading","filterSelectors","addItemsToCart","selectCategory","selectSort","filterObj","mappedPizza","Array","_","useEffect","scroll","CART","App","exact","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","store","configureStore","middleware","getDefaultMiddleware","prepend","thunkMiddleware","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.8a51a547.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/pizza-logo.56ac8703.svg\";","import * as React from 'react';\nimport classNames from 'classnames';\nimport { ButtonHTMLAttributes, DetailedHTMLProps } from 'react';\n\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;\n\ntype ButtonPropsType = DefaultButtonPropsType & {\n   outline?: any\n}\n\nexport const Button: React.FC<ButtonPropsType> = ({ className, outline, children, ...restProps }) => {\n\n   return (\n      <button className={classNames('button', className, {\n         'button--outline': outline,\n      })}\n         {...restProps}\n      >{children}</button>\n   )\n}\n","import { AppRootStateType } from '../../utils/types';\n\nexport const cartItemsSelectors = (state: AppRootStateType) => state.cart.items\nexport const totalPriceSelectors = (state: AppRootStateType) => state.cart.totalPrice\nexport const itemsCountSelectors = (state: AppRootStateType) => state.cart.itemsCount\n","import * as React from 'react';\nimport logoSvg from '../../u1-assets/img/pizza-logo.svg';\nimport { Link } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { Button } from '../Button/Button';\nimport { itemsCountSelectors, totalPriceSelectors } from '../CartItem/selectors';\nimport { AppRootStateType } from '../../utils/types';\nimport './Header.scss';\n\nexport const Header = () => {\n\n   const cartTotalPrice = useSelector<AppRootStateType, number>(totalPriceSelectors)\n   const cartItemsCount = useSelector<AppRootStateType, number>(itemsCountSelectors)\n\n   return (\n      <div className=\"header\">\n         <div className=\"container\">\n            <Link to='/'>\n               <div className=\"header__logo\">\n                  <img width=\"38\"\n                     src={logoSvg}\n                     alt=\"Pizza logo\" />\n                  <div>\n                     <h1>React Pizza</h1>\n                     <p>самая вкусная пицца во вселенной</p>\n                  </div>\n               </div>\n            </Link>\n            <div className=\"header__cart\">\n               <Link to='/cart'>\n                  <Button className={'button--cart'}>\n                     <span>{cartTotalPrice} BYN</span>\n                     <div className=\"button__delimiter\"></div>\n                     <svg\n                        width=\"18\"\n                        height=\"18\"\n                        viewBox=\"0 0 18 18\"\n                        fill=\"none\"\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                     >\n                        <path\n                           d=\"M6.33333 16.3333C7.06971 16.3333 7.66667 15.7364 7.66667 15C7.66667 14.2636 7.06971 13.6667 6.33333 13.6667C5.59695 13.6667 5 14.2636 5 15C5 15.7364 5.59695 16.3333 6.33333 16.3333Z\"\n                           stroke=\"white\"\n                           strokeWidth=\"1.8\"\n                           strokeLinecap=\"round\"\n                           strokeLinejoin=\"round\"\n                        />\n                        <path\n                           d=\"M14.3333 16.3333C15.0697 16.3333 15.6667 15.7364 15.6667 15C15.6667 14.2636 15.0697 13.6667 14.3333 13.6667C13.597 13.6667 13 14.2636 13 15C13 15.7364 13.597 16.3333 14.3333 16.3333Z\"\n                           stroke=\"white\"\n                           strokeWidth=\"1.8\"\n                           strokeLinecap=\"round\"\n                           strokeLinejoin=\"round\"\n                        />\n                        <path\n                           d=\"M4.78002 4.99999H16.3334L15.2134 10.5933C15.1524 10.9003 14.9854 11.176 14.7417 11.3722C14.4979 11.5684 14.1929 11.6727 13.88 11.6667H6.83335C6.50781 11.6694 6.1925 11.553 5.94689 11.3393C5.70128 11.1256 5.54233 10.8295 5.50002 10.5067L4.48669 2.82666C4.44466 2.50615 4.28764 2.21182 4.04482 1.99844C3.80201 1.78505 3.48994 1.66715 3.16669 1.66666H1.66669\"\n                           stroke=\"white\"\n                           strokeWidth=\"1.8\"\n                           strokeLinecap=\"round\"\n                           strokeLinejoin=\"round\"\n                        />\n                     </svg>\n                     <span>{cartItemsCount}</span>\n                  </Button>\n               </Link>\n            </div>\n         </div>\n      </div>\n   )\n}\n","export default __webpack_public_path__ + \"static/media/empty-cart.db905d1f.png\";","import React from 'react';\r\nimport cartEmptyImage from '../u1-assets/img/empty-cart.png';\r\nimport { Link } from 'react-router-dom';\r\nimport '../u0-scss/app.scss';  \r\n\r\nexport const EmptyCart: React.FC = () => {\r\n    return (\r\n        <div className=\"cart cart--empty\">\r\n            <h2>Корзина пустая <i>😕</i></h2>\r\n            <p>\r\n                Похоже вы не заказывали пиццу.<br />\r\n                Чтобы заказать пиццу, перейди на главную страницу.\r\n            </p>\r\n            <img src={cartEmptyImage} alt=\"Empty cart\" />\r\n            <Link to='/' className=\"button button--black\">\r\n                <span>Вернуться назад</span>\r\n            </Link>\r\n        </div>\r\n    )\r\n}","import { ActionCreatorsMapObject, bindActionCreators } from 'redux';\r\nimport { AppDispatchType } from './types';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useMemo } from 'react';\r\n\r\nexport const useAppDispatch = () => useDispatch<AppDispatchType>()\r\n\r\nexport function useActions<T extends ActionCreatorsMapObject<any>>(actions: T) {\r\n    const dispatch = useAppDispatch()\r\n\r\n    const boundActions = useMemo(() => {\r\n        return bindActionCreators(actions, dispatch)\r\n    }, [])\r\n\r\n    return boundActions\r\n}","import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { PizzaItemType } from '../PizzaBlock/pizzas-reducer';\nimport { map, reduce } from 'lodash';\nimport { objForCart } from '../PizzaBlock/PizzaBlock';\nimport { AppRootStateType } from '../../utils/types';\n\nexport type ItemArray = {\n    [key: string]: Array<PizzaItemType>\n}\n\nconst initialState = {\n    items: {} as ItemArray,\n    totalPrice: 0,\n    itemsCount: 0,\n}\n\nconst addToCartTC = createAsyncThunk('cart/addToCart', (pizzaItem: objForCart, thunkAPI) => {\n    const pizzas = (thunkAPI.getState() as AppRootStateType).pizzas.items;\n    const pizzaObj = pizzas && pizzas.find((obj: { id: number }) => obj.id === pizzaItem.id)\n    if (pizzaObj) {\n        return { pizzaItem: pizzaObj }\n    } else {\n        return { pizzaItem: {} as PizzaItemType }\n    }\n})\n\nexport type CartInitialState = typeof initialState\n\nexport const asyncActions = {\n    addToCartTC\n}\n\nexport const slice = createSlice({\n    name: 'cart',\n    initialState: {\n        items: {} as ItemArray,\n        totalPrice: 0,\n        itemsCount: 0,\n    },\n    reducers: {\n        plusItem(state, action: PayloadAction<{ id: number }>) {\n            state.items[action.payload.id].push(state.items[action.payload.id][0])\n\n            const result = reduce(map(state.items), (prev, cur) => prev.concat(cur as never), []);\n            state.totalPrice = result.reduce((total: number, obj: PizzaItemType) => obj.price + total, 0);\n            state.itemsCount = result.length;\n        },\n        minusItem(state, action: PayloadAction<{ id: number }>) {\n            if (state.items[action.payload.id].length > 1) {\n                state.items[action.payload.id].shift()\n\n                const result = reduce(map(state.items), (prev, cur) => prev.concat(cur as never), []);\n                state.totalPrice = result.reduce((total: number, obj: PizzaItemType) => obj.price + total, 0);\n                state.itemsCount = result.length;\n            }\n        },\n        removeItemsById(state, action: PayloadAction<{ id: number }>) {\n\n            delete state.items[action.payload.id]\n\n            const result = reduce(map(state.items), (prev, cur) => prev.concat(cur as never), []);\n            state.totalPrice = result.reduce((total: number, obj: PizzaItemType) => obj.price + total, 0);\n            state.itemsCount = result.length;\n        },\n        clearItems(state) {\n            state.items = {}\n\n            const result = reduce(map(state.items), (prev, cur) => prev.concat(cur as never), []);\n            state.totalPrice = result.reduce((total: number, obj: PizzaItemType) => obj.price + total, 0);\n            state.itemsCount = result.length;\n        },\n    },\n    extraReducers: builder => {\n        builder.addCase(addToCartTC.fulfilled, (state, action) => {\n            if (!state.items[action.payload.pizzaItem.id]) {\n                state.items[action.payload.pizzaItem.id] = []\n            }\n            state.items[action.payload.pizzaItem.id].push(action.payload.pizzaItem)\n\n            const result = reduce(map(state.items), (prev, cur) => prev.concat(cur as never), []);\n            state.totalPrice = result.reduce((total: number, obj: PizzaItemType) => obj.price + total, 0);\n            state.itemsCount = result.length;\n        })\n    }\n})\n\nexport const cartReducer = slice.reducer\nexport const { plusItem, minusItem, removeItemsById, clearItems } = slice.actions\n","import * as React from 'react';\nimport { Button } from '../Button/Button';\n\nexport type CartItemProps = {\n   imageUrl: string\n   name: string\n   type?: number\n   size?: Array<number>\n   count: number\n   price?: number\n   onMinus: () => void\n   onPlus: () => void\n   onRemoveItem?: () => void\n}\n\nexport const CartItem: React.FC<CartItemProps> =\n   ({\n      name,\n      type,\n      size,\n      count,\n      price,\n      onRemoveItem,\n      onMinus,\n      onPlus,\n   }) => {\n\n      const typeNames = ['тонкое', 'традиционное']\n\n      return (\n         <>\n            <div className=\"cart__item\">\n               <div className=\"cart__item-img\">\n                  <img\n                     className=\"pizza-block__image\"\n                     src=\"https://dodopizza-a.akamaihd.net/static/Img/Products/Pizza/ru-RU/b750f576-4a83-48e6-a283-5a8efb68c35d.jpg\"\n                     alt=\"Pizza\"\n                  />\n               </div>\n               <div className=\"cart__item-info\">\n                  <h3>{name}</h3>\n                  <p>{typeNames[type ? type : 0]} тесто, {size} см.</p>\n               </div>\n               <div className=\"cart__item-count\">\n                  <div onClick={onMinus}\n                     className=\"button button--outline button--circle cart__item-count-minus\">\n                     <svg width=\"10\"\n                        height=\"10\"\n                        viewBox=\"0 0 10 10\"\n                        fill=\"none\"\n                        xmlns=\"http://www.w3.org/2000/svg\">\n                        <path\n                           d=\"M5.92001 3.84V5.76V8.64C5.92001 9.17016 5.49017 9.6 4.96001 9.6C4.42985 9.6 4.00001 9.17016 4.00001 8.64L4 5.76L4.00001 3.84V0.96C4.00001 0.42984 4.42985 0 4.96001 0C5.49017 0 5.92001 0.42984 5.92001 0.96V3.84Z\"\n                           fill=\"#EB5A1E\" />\n                        <path\n                           d=\"M5.75998 5.92001L3.83998 5.92001L0.959977 5.92001C0.429817 5.92001 -2.29533e-05 5.49017 -2.29301e-05 4.96001C-2.2907e-05 4.42985 0.429817 4.00001 0.959977 4.00001L3.83998 4L5.75998 4.00001L8.63998 4.00001C9.17014 4.00001 9.59998 4.42985 9.59998 4.96001C9.59998 5.49017 9.17014 5.92001 8.63998 5.92001L5.75998 5.92001Z\"\n                           fill=\"#EB5A1E\" />\n                     </svg>\n                  </div>\n                  <b>{count}</b>\n                  <div onClick={onPlus}\n                     className=\"button button--outline button--circle cart__item-count-plus\">\n                     <svg width=\"10\"\n                        height=\"10\"\n                        viewBox=\"0 0 10 10\"\n                        fill=\"none\"\n                        xmlns=\"http://www.w3.org/2000/svg\">\n                        <path\n                           d=\"M5.92001 3.84V5.76V8.64C5.92001 9.17016 5.49017 9.6 4.96001 9.6C4.42985 9.6 4.00001 9.17016 4.00001 8.64L4 5.76L4.00001 3.84V0.96C4.00001 0.42984 4.42985 0 4.96001 0C5.49017 0 5.92001 0.42984 5.92001 0.96V3.84Z\"\n                           fill=\"#EB5A1E\" />\n                        <path\n                           d=\"M5.75998 5.92001L3.83998 5.92001L0.959977 5.92001C0.429817 5.92001 -2.29533e-05 5.49017 -2.29301e-05 4.96001C-2.2907e-05 4.42985 0.429817 4.00001 0.959977 4.00001L3.83998 4L5.75998 4.00001L8.63998 4.00001C9.17014 4.00001 9.59998 4.42985 9.59998 4.96001C9.59998 5.49017 9.17014 5.92001 8.63998 5.92001L5.75998 5.92001Z\"\n                           fill=\"#EB5A1E\" />\n                     </svg>\n                  </div>\n               </div>\n               <div className=\"cart__item-price\">\n                  <b>{price} ₽</b>\n               </div>\n               <div className=\"cart__item-remove\">\n                  <Button outline onClick={onRemoveItem} className=\"button--circle\">\n                     <svg width=\"10\" height=\"10\" viewBox=\"0 0 10 10\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                        <path\n                           d=\"M5.92001 3.84V5.76V8.64C5.92001 9.17016 5.49017 9.6 4.96001 9.6C4.42985 9.6 4.00001 9.17016 4.00001 8.64L4 5.76L4.00001 3.84V0.96C4.00001 0.42984 4.42985 0 4.96001 0C5.49017 0 5.92001 0.42984 5.92001 0.96V3.84Z\"\n                           fill=\"#EB5A1E\" />\n                        <path\n                           d=\"M5.75998 5.92001L3.83998 5.92001L0.959977 5.92001C0.429817 5.92001 -2.29533e-05 5.49017 -2.29301e-05 4.96001C-2.2907e-05 4.42985 0.429817 4.00001 0.959977 4.00001L3.83998 4L5.75998 4.00001L8.63998 4.00001C9.17014 4.00001 9.59998 4.42985 9.59998 4.96001C9.59998 5.49017 9.17014 5.92001 8.63998 5.92001L5.75998 5.92001Z\"\n                           fill=\"#EB5A1E\" />\n                     </svg>\n                  </Button>\n               </div>\n            </div>\n         </>\n      )\n   }\n\n","import * as cartSelectors from './selectors';\nimport { asyncActions as cartAsyncActions, slice as cartSlice } from './cart-reducer';\nimport { CartItem } from './CartItem';\n\nexport {\n    cartSelectors\n}\n\nconst cartActions = {\n    ...cartAsyncActions,\n    ...cartSlice.actions\n}\n\nconst cartReducer = cartSlice.reducer\n\nexport {\n    cartActions,\n    cartReducer,\n    CartItem\n}\n\n\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { map } from 'lodash';\r\nimport { Button } from '../u3-components/Button/Button';\r\nimport { EmptyCart } from './EmptyCart';\r\nimport { useActions } from '../utils/redux-utils';\r\nimport { path } from '../App';\r\nimport { cartActions, CartItem, cartSelectors } from '../u3-components/CartItem';\r\nimport '../u0-scss/app.scss';           //?????\r\n\r\nexport const Cart: React.FC = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const cartItems = useSelector(cartSelectors.cartItemsSelectors)\r\n    const totalPrice = useSelector(cartSelectors.totalPriceSelectors)\r\n    const itemsCount = useSelector(cartSelectors.itemsCountSelectors)\r\n    const { clearItems, minusItem, plusItem, removeItemsById } = useActions(cartActions)\r\n\r\n\r\n    const onClickOrder = () => {\r\n        console.log('ВАШ ЗАКАЗ', cartItems)\r\n    }\r\n\r\n    const plusCartItem = React.useCallback((id: number) => {\r\n        dispatch(plusItem({ id: id }))\r\n    }, [dispatch])\r\n\r\n    const minusCartItem = React.useCallback((id: number) => {\r\n        dispatch(minusItem({ id: id }))\r\n    }, [dispatch])\r\n\r\n    const onRemoveItem = React.useCallback((id: number) => {\r\n        if (window.confirm('Вы действительно хотите удалить?')) {\r\n            dispatch(removeItemsById({ id: id }))\r\n        }\r\n    }, [dispatch])\r\n\r\n    const onClearCartItem = React.useCallback(() => {\r\n        if (window.confirm('Вы действительно хотите очистить корзину?')) {\r\n            dispatch(clearItems())\r\n        }\r\n    }, [dispatch])\r\n\r\n    return (\r\n        <div className=\"content\">\r\n            <div className=\"container container--cart\">\r\n                {itemsCount\r\n                    ? (\r\n                        <div className=\"cart\">\r\n                            <div className=\"cart__top\">\r\n                                <h2 className=\"content__title\">\r\n                                    <svg width=\"18\" height=\"18\" viewBox=\"0 0 18 18\" fill=\"none\"\r\n                                        xmlns=\"http://www.w3.org/2000/svg\">\r\n                                        <path\r\n                                            d=\"M6.33333 16.3333C7.06971 16.3333 7.66667 15.7364 7.66667 15C7.66667 14.2636 7.06971 13.6667 6.33333 13.6667C5.59695 13.6667 5 14.2636 5 15C5 15.7364 5.59695 16.3333 6.33333 16.3333Z\"\r\n                                            stroke=\"white\" strokeWidth=\"1.8\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\r\n                                        <path\r\n                                            d=\"M14.3333 16.3333C15.0697 16.3333 15.6667 15.7364 15.6667 15C15.6667 14.2636 15.0697 13.6667 14.3333 13.6667C13.597 13.6667 13 14.2636 13 15C13 15.7364 13.597 16.3333 14.3333 16.3333Z\"\r\n                                            stroke=\"white\" strokeWidth=\"1.8\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\r\n                                        <path\r\n                                            d=\"M4.78002 4.99999H16.3334L15.2134 10.5933C15.1524 10.9003 14.9854 11.176 14.7417 11.3722C14.4979 11.5684 14.1929 11.6727 13.88 11.6667H6.83335C6.50781 11.6694 6.1925 11.553 5.94689 11.3393C5.70128 11.1256 5.54233 10.8295 5.50002 10.5067L4.48669 2.82666C4.44466 2.50615 4.28764 2.21182 4.04482 1.99844C3.80201 1.78505 3.48994 1.66715 3.16669 1.66666H1.66669\"\r\n                                            stroke=\"white\" strokeWidth=\"1.8\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\r\n                                    </svg>\r\n                                    Корзина\r\n                                </h2>\r\n                                <div className=\"cart__clear\">\r\n                                    <svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" fill=\"none\"\r\n                                        xmlns=\"http://www.w3.org/2000/svg\">\r\n                                        <path d=\"M2.5 5H4.16667H17.5\" stroke=\"#B6B6B6\" strokeWidth=\"1.2\" strokeLinecap=\"round\"\r\n                                            strokeLinejoin=\"round\" />\r\n                                        <path\r\n                                            d=\"M6.66663 5.00001V3.33334C6.66663 2.89131 6.84222 2.46739 7.15478 2.15483C7.46734 1.84227 7.89127 1.66667 8.33329 1.66667H11.6666C12.1087 1.66667 12.5326 1.84227 12.8451 2.15483C13.1577 2.46739 13.3333 2.89131 13.3333 3.33334V5.00001M15.8333 5.00001V16.6667C15.8333 17.1087 15.6577 17.5326 15.3451 17.8452C15.0326 18.1577 14.6087 18.3333 14.1666 18.3333H5.83329C5.39127 18.3333 4.96734 18.1577 4.65478 17.8452C4.34222 17.5326 4.16663 17.1087 4.16663 16.6667V5.00001H15.8333Z\"\r\n                                            stroke=\"#B6B6B6\" strokeWidth=\"1.2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\r\n                                        <path d=\"M8.33337 9.16667V14.1667\" stroke=\"#B6B6B6\" strokeWidth=\"1.2\"\r\n                                            strokeLinecap=\"round\"\r\n                                            strokeLinejoin=\"round\" />\r\n                                        <path d=\"M11.6666 9.16667V14.1667\" stroke=\"#B6B6B6\" strokeWidth=\"1.2\"\r\n                                            strokeLinecap=\"round\"\r\n                                            strokeLinejoin=\"round\" />\r\n                                    </svg>\r\n                                    <span onClick={onClearCartItem}>Очистить корзину</span>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"content__items\">\r\n                                {\r\n                                    map(cartItems, ([item]) => (\r\n                                        <CartItem\r\n                                            key={item.id}\r\n                                            {...item}\r\n\r\n                                            onMinus={() => minusCartItem(item.id)}\r\n                                            onPlus={() => plusCartItem(item.id)}\r\n                                            onRemoveItem={() => onRemoveItem(item.id)}\r\n                                            count={cartItems[item.id].length}\r\n                                        />))\r\n                                }\r\n                            </div>\r\n                            <div className=\"cart__bottom\">\r\n                                <div className=\"cart__bottom-details\">\r\n                                    <span>\r\n                                        Всего пицц: <b>{itemsCount} шт.</b>\r\n                                    </span>\r\n                                    <span>\r\n                                        Сумма заказа: <b>{totalPrice} BYN</b>\r\n                                    </span>\r\n                                </div>\r\n                                <div className=\"cart__bottom-buttons\">\r\n                                    <Button outline className=\"button--add go-back-btn\">\r\n                                        <svg width=\"8\" height=\"14\" viewBox=\"0 0 8 14\" fill=\"none\"\r\n                                            xmlns=\"http://www.w3.org/2000/svg\">\r\n                                            <path d=\"M7 13L1 6.93015L6.86175 1\" stroke=\"#D3D3D3\" strokeWidth=\"1.5\"\r\n                                                strokeLinecap=\"round\"\r\n                                                strokeLinejoin=\"round\" />\r\n                                        </svg>\r\n                                        <Link to={path.HOME}>\r\n                                            <span>Вернуться назад</span>\r\n                                        </Link>\r\n                                    </Button>\r\n                                    <Button onClick={onClickOrder} className=\"pay-btn\">\r\n                                        <span>Оплатить сейчас</span>\r\n                                    </Button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    ) : (\r\n                        <EmptyCart />\r\n                    )}\r\n            </div>\r\n        </div>\r\n    )\r\n}","import * as React from 'react';\nimport './Categories.scss';\n\ntype CategoriesProps = {\n   activeCategory: number | null\n   items: Array<string>\n   onClick: Function\n}\n\nexport const Categories: React.FC<CategoriesProps> =\n   ({ activeCategory, items, onClick }) => {\n\n      const mappedCategories = items && items\n         .map((item, index) => (\n            <li\n               key={index}\n               onClick={onClick.bind(this, index)}\n               className={activeCategory === index ? 'active' : ''}>\n               {item}\n            </li>\n         ))\n      return (\n         <div className=\"categories\">\n            <ul>\n               {mappedCategories}\n            </ul>\n         </div>\n      )\n   }\n","import { AppRootStateType } from '../../utils/types';\n\nexport const filtersSelectors = (state: AppRootStateType) => state.filters\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\nexport type SortByType = 'rating' | 'price' | 'name'\ntype Category = number | null\n\nconst initialState = {\n   category: 0 as Category,\n   sortBy: 'rating' as SortByType\n}\n\nexport type FiltersInitialState = typeof initialState\n\nexport const slice = createSlice({\n   name: 'filters',\n   initialState: initialState,\n   reducers: {\n      setSortBy(state, action: PayloadAction<{ name: SortByType }>) {\n         state.sortBy = action.payload.name\n      },\n      setCategory(state, action: PayloadAction<{ catIndex: number | null }>) {\n         state.category = action.payload.catIndex\n      },\n   }\n})\n\nexport const filtersReducer = slice.reducer\nexport const { setSortBy, setCategory } = slice.actions\n","import * as React from 'react';\nimport classNames from 'classnames';\nimport { FilterItemType } from '../SortPopup/SortPopup';\n\ntype PopupMenuType = {\n   items: Array<FilterItemType>\n   onClick: (obj: FilterItemType) => void\n   children: React.HTMLAttributes<HTMLSpanElement>\n   activeItem?: 'rating' | 'price' | 'name'\n}\n\nexport const PopupMenu: React.FC<PopupMenuType> = ({ children, items, onClick, activeItem }) => {\n\n   let [visiblePopup, setVisiblePopup] = React.useState(false)\n\n   const sortRef = React.useRef<HTMLDivElement>(null)\n\n   const clickOutsideCallback = React.useCallback(e => {\n      if (!e.path.includes(sortRef.current)) {\n         setVisiblePopup(false)\n      }\n   }, [])\n\n   const handleOutsideClick = (item: FilterItemType) => {\n      if (onClick) {\n         onClick(item)\n      }\n      setVisiblePopup(false)\n   }\n\n   React.useEffect(() => {\n      document.querySelector('body')!.addEventListener('click', clickOutsideCallback)\n      return () => document.querySelector('body')!.removeEventListener('click', clickOutsideCallback)\n   }, [clickOutsideCallback])\n\n\n   const mappedSortType = items && items.map((item: FilterItemType, index: number) => (\n      <li\n         key={index}\n         className={classNames({ active: item.value === activeItem })}\n         onClick={handleOutsideClick.bind(this, item)}>\n         {item.label}\n      </li>))\n\n   return (\n      <React.Fragment>\n         <div ref={sortRef} onClick={() => {\n            setVisiblePopup(!visiblePopup)\n         }}>{children}</div>\n         {visiblePopup && (\n            <div className=\"sort__popup\">\n               <ul>\n                  {mappedSortType}\n               </ul>\n            </div>\n         )}\n      </React.Fragment>\n   )\n}\n\n","import * as React from 'react';\nimport { PopupMenu } from '../PopupMenu/PopupMenu';\nimport './Sort.scss';\n\ntype SortPopupProps = {\n   sortBy: string\n   onSelect: (obj: FilterItemType) => void\n}\n\nexport type FilterItemType = {\n   value: 'rating' | 'price' | 'name'\n   label: 'популярному' | 'цене' | 'алфавиту'\n}\n\nexport type SortItemType = Array<FilterItemType>\n\nexport const SortPopup: React.FC<SortPopupProps> = ({ sortBy = 'rating', onSelect }) => {\n\n   const items: SortItemType = [\n      { value: 'rating', label: 'популярному' },\n      { value: 'price', label: 'цене' },\n      { value: 'name', label: 'алфавиту' },\n   ]\n\n   const selected = items.find(obj => obj.value === sortBy)\n\n   return (\n      <div className=\"sort\">\n         <PopupMenu\n            items={items}\n            onClick={onSelect}\n            activeItem={selected && selected.value}\n         >\n            <div className=\"sort__label\">\n               <b>Сортировка по:</b>\n               <span>{selected && selected.label}</span>\n            </div>\n         </PopupMenu>\n      </div>\n   )\n}\n\n","import * as filterSelectors from './selectors';\nimport { slice as filtersSlice } from './filters-reducer';\nimport { SortPopup } from './SortPopup';\n\nexport {\n    filterSelectors\n}\n\nconst filtersActions = {\n    ...filtersSlice.actions\n}\n\nconst pizzasReducer = filtersSlice.reducer\n\nexport {\n    filtersActions,\n    pizzasReducer,\n    SortPopup\n}\n\n","import { AppRootStateType } from '../../utils/types';\n\nexport const pizzasItemsSelectors = (state: AppRootStateType) => state.pizzas.items\nexport const pizzaIsLoadingSelectors = (state: AppRootStateType) => state.pizzas.isLoading\n","import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { FiltersInitialState } from '../SortPopup/filters-reducer';\nimport axios from 'axios';\n\nexport type PizzaItemType = {\n    id: number\n    imageUrl: string\n    name: string\n    types: [0, 1]\n    sizes: [26, 30, 40]\n    price: number\n    category: number\n    rating: number\n}\n\ntype ErrorType = null | string\n\nconst initialState = {\n    items: [] as Array<PizzaItemType>,\n    isLoading: false,\n    error: null as ErrorType\n}\n\nconst fetchPizzasTC = createAsyncThunk('pizzas/fetchPizzas', async (filters: FiltersInitialState, thunkAPI) => {\n    thunkAPI.dispatch(isLoading())\n    try {\n        const { data } = await axios.get(`/pizzas?${filters.category ? 'category=' + filters.category + '&' : ''}_sort=${filters.sortBy}&_order=desc`)\n        return { items: data }\n    } catch (err: any) {\n        thunkAPI.dispatch(isError(err))\n        thunkAPI.rejectWithValue(err)\n    }\n})\n\nexport type PizzasInitialState = typeof initialState\n\nexport const asyncActions = {\n    fetchPizzasTC\n}\n\nexport const slice = createSlice({\n    name: 'pizzas',\n    initialState: initialState,\n    reducers: {\n        isLoading(state) {\n            state.isLoading = true\n        },\n        isLoaded(state) {\n            state.isLoading = false\n        },\n        isError(state, acton: PayloadAction<{ error: null | string }>) {\n            state.isLoading = false\n            state.error = acton.payload.error\n        },\n    },\n    extraReducers: builder => {\n        builder\n            .addCase(fetchPizzasTC.fulfilled, (state, action) => {\n                if (action.payload) {\n                    state.items = action.payload.items\n                }\n                state.isLoading = false\n            })\n    }\n})\n\nexport const pizzasReducer = slice.reducer\nexport const { isLoaded, isLoading, isError } = slice.actions\n","import * as React from 'react';\nimport classNames from 'classnames';\nimport { Button } from '../Button/Button';\nimport { ItemArray } from '../CartItem/cart-reducer';\nimport './PizzaBlock.scss';\n\nexport type ItemType = {\n   id?: number\n   imageUrl?: string\n   name?: string\n   types?: [0, 1]\n   sizes?: [26, 30, 40]\n   price?: number\n   category?: number\n   rating?: number\n   cartItems?: ItemArray\n   onAdd?: Function\n   isLoading: boolean\n   key: number\n}\n\nexport type objForCart = {\n   id: number\n   types: [0, 1] | []\n   price: number\n   sizes: [26, 30, 40] | []\n}\n\nexport const PizzaBlock: React.FC<ItemType> =\n   ({\n      id = 0,\n      imageUrl = '',\n      name = '',\n      price = 0,\n      types = [],\n      sizes = [],\n      cartItems = {},\n      onAdd,\n      isLoading\n   }) => {\n\n      const availableTypes: string[] = ['тонкое', 'традиционнное']\n      const availableSizes: number[] = [26, 30, 40]\n\n      const addedCount = cartItems[id] ? cartItems[id].length : 0\n\n      const [activeType, setActiveType] = React.useState<number>(0)\n      const [activeSize, setActiveSize] = React.useState<number>(availableSizes[0])\n\n      const onSelectType = (index: number) => {\n         setActiveType(index)\n      }\n\n      const onSelectSize = (index: number) => {\n         setActiveSize(index)\n      }\n\n      const onAddPizza = () => {\n         const obj: objForCart = {\n            id,\n            types,\n            price,\n            sizes,\n         }\n         if (onAdd) {\n            onAdd(obj)\n         }\n      }\n\n      const mappedAvailableTypes = availableTypes\n         .map((curType: string, index: number) =>\n            <li key={index}\n               onClick={() => onSelectType(index)}\n               className={classNames({\n                  active: index === activeType,\n                  disabled: !types.includes(index as never),\n               })}>{curType}\n            </li>)\n\n\n      const mappedAvailableSizes: JSX.Element[] = availableSizes.map((curSize: number, index: number) => {\n         return <li key={index}\n            onClick={() => onSelectSize(curSize)}\n            className={classNames({\n               active: curSize === activeSize,\n               disabled: !sizes.includes(curSize as never) //never type\n            })}>{curSize} см.\n         </li>\n      }\n      )\n\n      return <div className={classNames('pizza-block', { 'pizza-block--loading': isLoading })}>\n         <img\n            className=\"pizza-block__image\"\n            src={imageUrl}\n            alt=\"Pizza\"\n         />\n         <h4 className=\"pizza-block__title\">{name}</h4>\n         <div className=\"pizza-block__selector\">\n            <ul>\n               {mappedAvailableTypes}\n            </ul>\n            <ul>\n               {mappedAvailableSizes}\n            </ul>\n         </div>\n         <div className=\"pizza-block__bottom\">\n            <div className=\"pizza-block__price\">от {price} ₽</div>\n            <Button className=\"button--add\"\n               onClick={onAddPizza}\n               outline>\n               <svg\n                  width=\"12\"\n                  height=\"12\"\n                  viewBox=\"0 0 12 12\"\n                  fill=\"none\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n               >\n                  <path\n                     d=\"M10.8 4.8H7.2V1.2C7.2 0.5373 6.6627 0 6 0C5.3373 0 4.8 0.5373 4.8 1.2V4.8H1.2C0.5373 4.8 0 5.3373 0 6C0 6.6627 0.5373 7.2 1.2 7.2H4.8V10.8C4.8 11.4627 5.3373 12 6 12C6.6627 12 7.2 11.4627 7.2 10.8V7.2H10.8C11.4627 7.2 12 6.6627 12 6C12 5.3373 11.4627 4.8 10.8 4.8Z\"\n                     fill=\"white\"\n                  />\n               </svg>\n               <span>Добавить</span>\n               {addedCount > 0 && <i>{addedCount}</i>}\n            </Button>\n         </div>\n      </div>\n   }\n","import * as pizzaSelectors from './selectors';\nimport { asyncActions as pizzasAsyncActions, slice as pizzasSlice } from './pizzas-reducer';\nimport { PizzaBlock } from './PizzaBlock';\n\nexport {\n    pizzaSelectors\n}\n\nconst pizzasActions = {\n    ...pizzasAsyncActions,\n    ...pizzasSlice.actions\n}\n\nconst pizzasReducer = pizzasSlice.reducer\n\nexport {\n    pizzasActions,\n    pizzasReducer,\n    PizzaBlock\n}\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Categories } from '../u3-components/Categories';\r\nimport { SortPopup } from '../u3-components/SortPopup';\r\nimport { PizzaBlock } from '../u3-components/PizzaBlock';\r\nimport { cartActions, cartSelectors } from '../u3-components/CartItem';\r\nimport { pizzasActions, pizzaSelectors } from '../u3-components/PizzaBlock';\r\nimport { filtersActions, filterSelectors } from '../u3-components/SortPopup';\r\nimport { objForCart } from '../u3-components/PizzaBlock/PizzaBlock';\r\nimport { FilterItemType } from '../u3-components/SortPopup/SortPopup';\r\nimport { useActions } from '../utils/redux-utils';\r\nimport '../u0-scss/app.scss';  \r\n\r\nexport const Home: React.FC = (props) => {\r\n    const pizzasItems = useSelector(pizzaSelectors.pizzasItemsSelectors)\r\n    const pizzaIsLoading = useSelector(pizzaSelectors.pizzaIsLoadingSelectors)\r\n    const cartItems = useSelector(cartSelectors.cartItemsSelectors)\r\n    const filters = useSelector(filterSelectors.filtersSelectors)\r\n    const { addToCartTC } = useActions(cartActions)\r\n    const { fetchPizzasTC } = useActions(pizzasActions)\r\n    const { setCategory, setSortBy } = useActions(filtersActions)\r\n    const dispatch = useDispatch()\r\n\r\n    const addItemsToCart = React.useCallback((obj: objForCart) => addToCartTC(obj)\r\n        , [dispatch])\r\n\r\n    const selectCategory = React.useCallback((index: number | null) => setCategory({ catIndex: index })\r\n        , [dispatch])\r\n\r\n    const selectSort = React.useCallback((filterObj: FilterItemType) => setSortBy({ name: filterObj.value })\r\n        , [dispatch])\r\n\r\n    const mappedPizza = pizzasItems && !pizzaIsLoading\r\n        ? pizzasItems.map((item) => <PizzaBlock key={item.id}\r\n            onAdd={addItemsToCart}\r\n            cartItems={cartItems}\r\n            isLoading={pizzaIsLoading}\r\n            {...item} />)\r\n        : [...Array(8).map((_, index) => <PizzaBlock key={index} isLoading={pizzaIsLoading} />)]\r\n\r\n    React.useEffect(() => {\r\n        fetchPizzasTC(filters)\r\n    }, [dispatch, filters])\r\n\r\n    React.useEffect(() => {\r\n        window.scroll(0, 0)\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"content__top\">\r\n                <Categories\r\n                    activeCategory={filters.category}\r\n                    items={['Мясные', 'Вегетарианская', 'Гриль', 'Острые', 'Закрытые']}\r\n                    onClick={selectCategory}\r\n                />\r\n                <SortPopup\r\n                    sortBy={filters.sortBy}\r\n                    onSelect={selectSort}\r\n                />\r\n            </div>\r\n            <h2 className=\"content__title\">Все пиццы</h2>\r\n            {console.log(pizzaIsLoading)}\r\n            <div className=\"content__items\">\r\n                {\r\n                    mappedPizza\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}","import * as React from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport './u0-scss/app.scss';\r\nimport { Header } from './u3-components/Header/Header';\r\nimport { Cart } from './u5-pages/Cart';\r\nimport { Home } from './u5-pages/Home';\r\n\r\nexport const path = {\r\n  HOME: '/',\r\n  CART: '/cart'\r\n}\r\n\r\nfunction App() {\r\n\r\n  const items = ['Мясные', 'Вегетарианская', 'Гриль', 'Острые', 'Закрытые']\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"header\">\r\n        <Header />\r\n        <div className=\"content\">\r\n          <Route exact path={path.HOME} render={() => <Home />} />\r\n          <Route exact path={path.CART} render={() => <Cart />} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers, configureStore } from '@reduxjs/toolkit';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport { cartReducer } from '../u3-components/CartItem/cart-reducer';\r\nimport { pizzasReducer } from '../u3-components/PizzaBlock/pizzas-reducer';\r\nimport { filtersReducer } from '../u3-components/SortPopup/filters-reducer';\r\n\r\nexport const rootReducer = combineReducers({\r\n    filters: filtersReducer,\r\n    pizzas: pizzasReducer,\r\n    cart: cartReducer,\r\n})\r\n\r\nexport const store = configureStore({\r\n    reducer: rootReducer,\r\n    middleware: getDefaultMiddleware => getDefaultMiddleware().prepend(thunkMiddleware)\r\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { HashRouter } from 'react-router-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { store } from './u6-store/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <HashRouter>\n        <App />\n      </HashRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}